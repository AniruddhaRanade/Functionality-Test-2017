
OBCm--OBCm-Power.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000030  00800100  000002a2  00000316  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000002a2  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000346  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000378  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000b8  00000000  00000000  000003b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000102f  00000000  00000000  00000470  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000997  00000000  00000000  0000149f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000006d2  00000000  00000000  00001e36  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000140  00000000  00000000  00002508  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000052b  00000000  00000000  00002648  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000f7  00000000  00000000  00002b73  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000088  00000000  00000000  00002c6a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	58 c0       	rjmp	.+176    	; 0xb6 <__bad_interrupt>
   6:	00 00       	nop
   8:	56 c0       	rjmp	.+172    	; 0xb6 <__bad_interrupt>
   a:	00 00       	nop
   c:	54 c0       	rjmp	.+168    	; 0xb6 <__bad_interrupt>
   e:	00 00       	nop
  10:	52 c0       	rjmp	.+164    	; 0xb6 <__bad_interrupt>
  12:	00 00       	nop
  14:	50 c0       	rjmp	.+160    	; 0xb6 <__bad_interrupt>
  16:	00 00       	nop
  18:	4e c0       	rjmp	.+156    	; 0xb6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	4c c0       	rjmp	.+152    	; 0xb6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	4a c0       	rjmp	.+148    	; 0xb6 <__bad_interrupt>
  22:	00 00       	nop
  24:	48 c0       	rjmp	.+144    	; 0xb6 <__bad_interrupt>
  26:	00 00       	nop
  28:	46 c0       	rjmp	.+140    	; 0xb6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	44 c0       	rjmp	.+136    	; 0xb6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	42 c0       	rjmp	.+132    	; 0xb6 <__bad_interrupt>
  32:	00 00       	nop
  34:	40 c0       	rjmp	.+128    	; 0xb6 <__bad_interrupt>
  36:	00 00       	nop
  38:	3e c0       	rjmp	.+124    	; 0xb6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	3c c0       	rjmp	.+120    	; 0xb6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	3a c0       	rjmp	.+116    	; 0xb6 <__bad_interrupt>
  42:	00 00       	nop
  44:	38 c0       	rjmp	.+112    	; 0xb6 <__bad_interrupt>
  46:	00 00       	nop
  48:	36 c0       	rjmp	.+108    	; 0xb6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	34 c0       	rjmp	.+104    	; 0xb6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	32 c0       	rjmp	.+100    	; 0xb6 <__bad_interrupt>
  52:	00 00       	nop
  54:	30 c0       	rjmp	.+96     	; 0xb6 <__bad_interrupt>
  56:	00 00       	nop
  58:	2e c0       	rjmp	.+92     	; 0xb6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	2c c0       	rjmp	.+88     	; 0xb6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	2a c0       	rjmp	.+84     	; 0xb6 <__bad_interrupt>
  62:	00 00       	nop
  64:	28 c0       	rjmp	.+80     	; 0xb6 <__bad_interrupt>
  66:	00 00       	nop
  68:	26 c0       	rjmp	.+76     	; 0xb6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	24 c0       	rjmp	.+72     	; 0xb6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	22 c0       	rjmp	.+68     	; 0xb6 <__bad_interrupt>
  72:	00 00       	nop
  74:	20 c0       	rjmp	.+64     	; 0xb6 <__bad_interrupt>
  76:	00 00       	nop
  78:	1e c0       	rjmp	.+60     	; 0xb6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	1c c0       	rjmp	.+56     	; 0xb6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	1a c0       	rjmp	.+52     	; 0xb6 <__bad_interrupt>
  82:	00 00       	nop
  84:	18 c0       	rjmp	.+48     	; 0xb6 <__bad_interrupt>
  86:	00 00       	nop
  88:	16 c0       	rjmp	.+44     	; 0xb6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e2 ea       	ldi	r30, 0xA2	; 162
  a0:	f2 e0       	ldi	r31, 0x02	; 2
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a0 33       	cpi	r26, 0x30	; 48
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>
  b2:	d0 d0       	rcall	.+416    	; 0x254 <main>
  b4:	f4 c0       	rjmp	.+488    	; 0x29e <_exit>

000000b6 <__bad_interrupt>:
  b6:	a4 cf       	rjmp	.-184    	; 0x0 <__vectors>

000000b8 <led_test_m_config>:
#include "common.h"
#include "led_tests.h"
#include "uart.h"

void led_test_m_config(void)
{
  b8:	cf 93       	push	r28
  ba:	df 93       	push	r29
	DDRA=0x0F;
  bc:	cf e0       	ldi	r28, 0x0F	; 15
  be:	ca bb       	out	0x1a, r28	; 26
	
	transmit_string_UART0("_a_");
  c0:	80 e0       	ldi	r24, 0x00	; 0
  c2:	91 e0       	ldi	r25, 0x01	; 1
  c4:	e0 d0       	rcall	.+448    	; 0x286 <transmit_string_UART0>
		
	PORTA = 0x0F;
  c6:	cb bb       	out	0x1b, r28	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  c8:	2f ef       	ldi	r18, 0xFF	; 255
  ca:	81 ee       	ldi	r24, 0xE1	; 225
  cc:	94 e0       	ldi	r25, 0x04	; 4
  ce:	21 50       	subi	r18, 0x01	; 1
  d0:	80 40       	sbci	r24, 0x00	; 0
  d2:	90 40       	sbci	r25, 0x00	; 0
  d4:	e1 f7       	brne	.-8      	; 0xce <led_test_m_config+0x16>
  d6:	00 c0       	rjmp	.+0      	; 0xd8 <led_test_m_config+0x20>
  d8:	00 00       	nop
	_delay_ms(200);
	PORTA = 0xF0;
  da:	d0 ef       	ldi	r29, 0xF0	; 240
  dc:	db bb       	out	0x1b, r29	; 27
  de:	2f ef       	ldi	r18, 0xFF	; 255
  e0:	81 ee       	ldi	r24, 0xE1	; 225
  e2:	94 e0       	ldi	r25, 0x04	; 4
  e4:	21 50       	subi	r18, 0x01	; 1
  e6:	80 40       	sbci	r24, 0x00	; 0
  e8:	90 40       	sbci	r25, 0x00	; 0
  ea:	e1 f7       	brne	.-8      	; 0xe4 <led_test_m_config+0x2c>
  ec:	00 c0       	rjmp	.+0      	; 0xee <led_test_m_config+0x36>
  ee:	00 00       	nop
	_delay_ms(200);

	transmit_string_UART0("_b_");
  f0:	84 e0       	ldi	r24, 0x04	; 4
  f2:	91 e0       	ldi	r25, 0x01	; 1
  f4:	c8 d0       	rcall	.+400    	; 0x286 <transmit_string_UART0>
		
	PORTA = 0x0F;
  f6:	cb bb       	out	0x1b, r28	; 27
  f8:	2f ef       	ldi	r18, 0xFF	; 255
  fa:	81 ee       	ldi	r24, 0xE1	; 225
  fc:	94 e0       	ldi	r25, 0x04	; 4
  fe:	21 50       	subi	r18, 0x01	; 1
 100:	80 40       	sbci	r24, 0x00	; 0
 102:	90 40       	sbci	r25, 0x00	; 0
 104:	e1 f7       	brne	.-8      	; 0xfe <led_test_m_config+0x46>
 106:	00 c0       	rjmp	.+0      	; 0x108 <led_test_m_config+0x50>
 108:	00 00       	nop
	_delay_ms(200);
	PORTA = 0xF0;
 10a:	db bb       	out	0x1b, r29	; 27
 10c:	2f ef       	ldi	r18, 0xFF	; 255
 10e:	81 ee       	ldi	r24, 0xE1	; 225
 110:	94 e0       	ldi	r25, 0x04	; 4
 112:	21 50       	subi	r18, 0x01	; 1
 114:	80 40       	sbci	r24, 0x00	; 0
 116:	90 40       	sbci	r25, 0x00	; 0
 118:	e1 f7       	brne	.-8      	; 0x112 <led_test_m_config+0x5a>
 11a:	00 c0       	rjmp	.+0      	; 0x11c <led_test_m_config+0x64>
 11c:	00 00       	nop
	_delay_ms(200);
	
	transmit_string_UART0("_c_");
 11e:	88 e0       	ldi	r24, 0x08	; 8
 120:	91 e0       	ldi	r25, 0x01	; 1
 122:	b1 d0       	rcall	.+354    	; 0x286 <transmit_string_UART0>
	
	PORTA = 0x0F;
 124:	cb bb       	out	0x1b, r28	; 27
 126:	2f ef       	ldi	r18, 0xFF	; 255
 128:	81 ee       	ldi	r24, 0xE1	; 225
 12a:	94 e0       	ldi	r25, 0x04	; 4
 12c:	21 50       	subi	r18, 0x01	; 1
 12e:	80 40       	sbci	r24, 0x00	; 0
 130:	90 40       	sbci	r25, 0x00	; 0
 132:	e1 f7       	brne	.-8      	; 0x12c <led_test_m_config+0x74>
 134:	00 c0       	rjmp	.+0      	; 0x136 <led_test_m_config+0x7e>
 136:	00 00       	nop
	_delay_ms(200);
	PORTA = 0xF0;
 138:	db bb       	out	0x1b, r29	; 27
 13a:	2f ef       	ldi	r18, 0xFF	; 255
 13c:	81 ee       	ldi	r24, 0xE1	; 225
 13e:	94 e0       	ldi	r25, 0x04	; 4
 140:	21 50       	subi	r18, 0x01	; 1
 142:	80 40       	sbci	r24, 0x00	; 0
 144:	90 40       	sbci	r25, 0x00	; 0
 146:	e1 f7       	brne	.-8      	; 0x140 <led_test_m_config+0x88>
 148:	00 c0       	rjmp	.+0      	; 0x14a <led_test_m_config+0x92>
 14a:	00 00       	nop
	_delay_ms(200);
	
	transmit_string_UART0("_d_");
 14c:	8c e0       	ldi	r24, 0x0C	; 12
 14e:	91 e0       	ldi	r25, 0x01	; 1
 150:	9a d0       	rcall	.+308    	; 0x286 <transmit_string_UART0>
	
	PORTA = 0x0F;
 152:	cb bb       	out	0x1b, r28	; 27
 154:	2f ef       	ldi	r18, 0xFF	; 255
 156:	81 ee       	ldi	r24, 0xE1	; 225
 158:	94 e0       	ldi	r25, 0x04	; 4
 15a:	21 50       	subi	r18, 0x01	; 1
 15c:	80 40       	sbci	r24, 0x00	; 0
 15e:	90 40       	sbci	r25, 0x00	; 0
 160:	e1 f7       	brne	.-8      	; 0x15a <led_test_m_config+0xa2>
 162:	00 c0       	rjmp	.+0      	; 0x164 <led_test_m_config+0xac>
 164:	00 00       	nop
	_delay_ms(200);
	PORTA = 0xF0;
 166:	db bb       	out	0x1b, r29	; 27
 168:	2f ef       	ldi	r18, 0xFF	; 255
 16a:	81 ee       	ldi	r24, 0xE1	; 225
 16c:	94 e0       	ldi	r25, 0x04	; 4
 16e:	21 50       	subi	r18, 0x01	; 1
 170:	80 40       	sbci	r24, 0x00	; 0
 172:	90 40       	sbci	r25, 0x00	; 0
 174:	e1 f7       	brne	.-8      	; 0x16e <led_test_m_config+0xb6>
 176:	00 c0       	rjmp	.+0      	; 0x178 <led_test_m_config+0xc0>
 178:	00 00       	nop
	_delay_ms(200);
	
	PORTA = 0x00; 
 17a:	1b ba       	out	0x1b, r1	; 27
 17c:	2f ef       	ldi	r18, 0xFF	; 255
 17e:	81 ee       	ldi	r24, 0xE1	; 225
 180:	94 e0       	ldi	r25, 0x04	; 4
 182:	21 50       	subi	r18, 0x01	; 1
 184:	80 40       	sbci	r24, 0x00	; 0
 186:	90 40       	sbci	r25, 0x00	; 0
 188:	e1 f7       	brne	.-8      	; 0x182 <led_test_m_config+0xca>
 18a:	00 c0       	rjmp	.+0      	; 0x18c <led_test_m_config+0xd4>
 18c:	00 00       	nop
	_delay_ms(200);
	
}
 18e:	df 91       	pop	r29
 190:	cf 91       	pop	r28
 192:	08 95       	ret

00000194 <led_test_m_a>:

void led_test_m_a(void)
{
	PORTA |= 0b10000000;
 194:	df 9a       	sbi	0x1b, 7	; 27
	transmit_string_UART0(" led_a ");
 196:	80 e1       	ldi	r24, 0x10	; 16
 198:	91 e0       	ldi	r25, 0x01	; 1
 19a:	75 d0       	rcall	.+234    	; 0x286 <transmit_string_UART0>
 19c:	2f ef       	ldi	r18, 0xFF	; 255
 19e:	81 ee       	ldi	r24, 0xE1	; 225
 1a0:	94 e0       	ldi	r25, 0x04	; 4
 1a2:	21 50       	subi	r18, 0x01	; 1
 1a4:	80 40       	sbci	r24, 0x00	; 0
 1a6:	90 40       	sbci	r25, 0x00	; 0
 1a8:	e1 f7       	brne	.-8      	; 0x1a2 <led_test_m_a+0xe>
 1aa:	00 c0       	rjmp	.+0      	; 0x1ac <led_test_m_a+0x18>
 1ac:	00 00       	nop
	_delay_ms(200);
	PORTA &= 0b01111111;
 1ae:	df 98       	cbi	0x1b, 7	; 27
 1b0:	2f ef       	ldi	r18, 0xFF	; 255
 1b2:	81 ee       	ldi	r24, 0xE1	; 225
 1b4:	94 e0       	ldi	r25, 0x04	; 4
 1b6:	21 50       	subi	r18, 0x01	; 1
 1b8:	80 40       	sbci	r24, 0x00	; 0
 1ba:	90 40       	sbci	r25, 0x00	; 0
 1bc:	e1 f7       	brne	.-8      	; 0x1b6 <led_test_m_a+0x22>
 1be:	00 c0       	rjmp	.+0      	; 0x1c0 <led_test_m_a+0x2c>
 1c0:	00 00       	nop
 1c2:	08 95       	ret

000001c4 <led_test_m_b>:
	_delay_ms(200);
}

void led_test_m_b(void)
{
	PORTA |= 0b01000000;
 1c4:	de 9a       	sbi	0x1b, 6	; 27
	transmit_string_UART0(" led_b ");
 1c6:	88 e1       	ldi	r24, 0x18	; 24
 1c8:	91 e0       	ldi	r25, 0x01	; 1
 1ca:	5d d0       	rcall	.+186    	; 0x286 <transmit_string_UART0>
 1cc:	2f ef       	ldi	r18, 0xFF	; 255
 1ce:	81 ee       	ldi	r24, 0xE1	; 225
 1d0:	94 e0       	ldi	r25, 0x04	; 4
 1d2:	21 50       	subi	r18, 0x01	; 1
 1d4:	80 40       	sbci	r24, 0x00	; 0
 1d6:	90 40       	sbci	r25, 0x00	; 0
 1d8:	e1 f7       	brne	.-8      	; 0x1d2 <led_test_m_b+0xe>
 1da:	00 c0       	rjmp	.+0      	; 0x1dc <led_test_m_b+0x18>
 1dc:	00 00       	nop
	_delay_ms(200);
	PORTA &= 0b10111111;
 1de:	de 98       	cbi	0x1b, 6	; 27
 1e0:	2f ef       	ldi	r18, 0xFF	; 255
 1e2:	81 ee       	ldi	r24, 0xE1	; 225
 1e4:	94 e0       	ldi	r25, 0x04	; 4
 1e6:	21 50       	subi	r18, 0x01	; 1
 1e8:	80 40       	sbci	r24, 0x00	; 0
 1ea:	90 40       	sbci	r25, 0x00	; 0
 1ec:	e1 f7       	brne	.-8      	; 0x1e6 <led_test_m_b+0x22>
 1ee:	00 c0       	rjmp	.+0      	; 0x1f0 <led_test_m_b+0x2c>
 1f0:	00 00       	nop
 1f2:	08 95       	ret

000001f4 <led_test_m_c>:
	_delay_ms(200);
}

void led_test_m_c(void)
{
	PORTA |= 0b00100000;
 1f4:	dd 9a       	sbi	0x1b, 5	; 27
	transmit_string_UART0(" led_c ");
 1f6:	80 e2       	ldi	r24, 0x20	; 32
 1f8:	91 e0       	ldi	r25, 0x01	; 1
 1fa:	45 d0       	rcall	.+138    	; 0x286 <transmit_string_UART0>
 1fc:	2f ef       	ldi	r18, 0xFF	; 255
 1fe:	81 ee       	ldi	r24, 0xE1	; 225
 200:	94 e0       	ldi	r25, 0x04	; 4
 202:	21 50       	subi	r18, 0x01	; 1
 204:	80 40       	sbci	r24, 0x00	; 0
 206:	90 40       	sbci	r25, 0x00	; 0
 208:	e1 f7       	brne	.-8      	; 0x202 <led_test_m_c+0xe>
 20a:	00 c0       	rjmp	.+0      	; 0x20c <led_test_m_c+0x18>
 20c:	00 00       	nop
	_delay_ms(200);
	PORTA &= 0b11011111;
 20e:	dd 98       	cbi	0x1b, 5	; 27
 210:	2f ef       	ldi	r18, 0xFF	; 255
 212:	81 ee       	ldi	r24, 0xE1	; 225
 214:	94 e0       	ldi	r25, 0x04	; 4
 216:	21 50       	subi	r18, 0x01	; 1
 218:	80 40       	sbci	r24, 0x00	; 0
 21a:	90 40       	sbci	r25, 0x00	; 0
 21c:	e1 f7       	brne	.-8      	; 0x216 <led_test_m_c+0x22>
 21e:	00 c0       	rjmp	.+0      	; 0x220 <led_test_m_c+0x2c>
 220:	00 00       	nop
 222:	08 95       	ret

00000224 <led_test_m_d>:
	_delay_ms(200);
}

void led_test_m_d(void)
{
	PORTA |= 0b00010000;
 224:	dc 9a       	sbi	0x1b, 4	; 27
	transmit_string_UART0(" led_d ");
 226:	88 e2       	ldi	r24, 0x28	; 40
 228:	91 e0       	ldi	r25, 0x01	; 1
 22a:	2d d0       	rcall	.+90     	; 0x286 <transmit_string_UART0>
 22c:	2f ef       	ldi	r18, 0xFF	; 255
 22e:	81 ee       	ldi	r24, 0xE1	; 225
 230:	94 e0       	ldi	r25, 0x04	; 4
 232:	21 50       	subi	r18, 0x01	; 1
 234:	80 40       	sbci	r24, 0x00	; 0
 236:	90 40       	sbci	r25, 0x00	; 0
 238:	e1 f7       	brne	.-8      	; 0x232 <led_test_m_d+0xe>
 23a:	00 c0       	rjmp	.+0      	; 0x23c <led_test_m_d+0x18>
 23c:	00 00       	nop
	_delay_ms(200);
	PORTA &= 0b11101111;
 23e:	dc 98       	cbi	0x1b, 4	; 27
 240:	2f ef       	ldi	r18, 0xFF	; 255
 242:	81 ee       	ldi	r24, 0xE1	; 225
 244:	94 e0       	ldi	r25, 0x04	; 4
 246:	21 50       	subi	r18, 0x01	; 1
 248:	80 40       	sbci	r24, 0x00	; 0
 24a:	90 40       	sbci	r25, 0x00	; 0
 24c:	e1 f7       	brne	.-8      	; 0x246 <led_test_m_d+0x22>
 24e:	00 c0       	rjmp	.+0      	; 0x250 <led_test_m_d+0x2c>
 250:	00 00       	nop
 252:	08 95       	ret

00000254 <main>:


int main(void)
{
	// Initializations 
	init_UART0();
 254:	07 d0       	rcall	.+14     	; 0x264 <init_UART0>
	
	// Variables 
	
	
	sei();
 256:	78 94       	sei
	
    while (1) 
    {
		// Loop 
		led_test_m_config();
 258:	2f df       	rcall	.-418    	; 0xb8 <led_test_m_config>
		led_test_m_a();
 25a:	9c df       	rcall	.-200    	; 0x194 <led_test_m_a>
		led_test_m_b();
 25c:	b3 df       	rcall	.-154    	; 0x1c4 <led_test_m_b>
		led_test_m_c();
 25e:	ca df       	rcall	.-108    	; 0x1f4 <led_test_m_c>
		led_test_m_d();
 260:	e1 df       	rcall	.-62     	; 0x224 <led_test_m_d>
		
    }
 262:	fa cf       	rjmp	.-12     	; 0x258 <main+0x4>

00000264 <init_UART0>:
    	while ( !(UCSR1A & (_BV(UDRE1))) );
    	///* Start transmission
    	UDR1 = buffer[i];
		i++;	
	}
}
 264:	1b b8       	out	0x0b, r1	; 11
 266:	1a b8       	out	0x0a, r1	; 10
 268:	e5 e9       	ldi	r30, 0x95	; 149
 26a:	f0 e0       	ldi	r31, 0x00	; 0
 26c:	10 82       	st	Z, r1
 26e:	59 9a       	sbi	0x0b, 1	; 11
 270:	8a b1       	in	r24, 0x0a	; 10
 272:	88 61       	ori	r24, 0x18	; 24
 274:	8a b9       	out	0x0a, r24	; 10
 276:	80 81       	ld	r24, Z
 278:	8e 60       	ori	r24, 0x0E	; 14
 27a:	80 83       	st	Z, r24
 27c:	87 e6       	ldi	r24, 0x67	; 103
 27e:	89 b9       	out	0x09, r24	; 9
 280:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
 284:	08 95       	ret

00000286 <transmit_string_UART0>:


void transmit_string_UART0(char *buffer)
{
 286:	fc 01       	movw	r30, r24
  	uint16_t i = 0;
  	///Loop through the data
  	while(buffer[i] != '\0')
 288:	90 81       	ld	r25, Z
 28a:	99 23       	and	r25, r25
 28c:	39 f0       	breq	.+14     	; 0x29c <transmit_string_UART0+0x16>
 28e:	31 96       	adiw	r30, 0x01	; 1
  	{
    	///* Wait for empty transmit buffer 
    	while ( !(UCSR0A & (_BV(UDRE0))) );
 290:	5d 9b       	sbis	0x0b, 5	; 11
 292:	fe cf       	rjmp	.-4      	; 0x290 <transmit_string_UART0+0xa>
    	///* Start transmission
    	UDR0 = buffer[i];
 294:	9c b9       	out	0x0c, r25	; 12

void transmit_string_UART0(char *buffer)
{
  	uint16_t i = 0;
  	///Loop through the data
  	while(buffer[i] != '\0')
 296:	91 91       	ld	r25, Z+
 298:	91 11       	cpse	r25, r1
 29a:	fa cf       	rjmp	.-12     	; 0x290 <transmit_string_UART0+0xa>
 29c:	08 95       	ret

0000029e <_exit>:
 29e:	f8 94       	cli

000002a0 <__stop_program>:
 2a0:	ff cf       	rjmp	.-2      	; 0x2a0 <__stop_program>
